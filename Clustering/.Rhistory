system.time(run1())
system.time(run2())
ls()
sum()
sum(1:10)
base()
base
ls(pattern="^sum$",envir=baseenv())
setRepositories()
clear
A=matrix(c(1,-2,1,1,
1,-2,1,-1,
2,4,2,5,
-3,2,6,3),4,4,T)
B=c(2,-3,4,1)
A
B
X=sapply(c(1:4),function(i,A,B){
D1=A
D1[,i]=B
det(D1)/det(A)
},A=A,B=B) X
X=solve(a=A,b=B)X
X=sapply(c(1:4),
function(i,A,B){
D1=A
D1[,i]=B
det(D1)/det(A)},
A=A,B=B) X
det
det(A)
X=solve(a=A,b=B)
X
curl
libcurl
setRepositories()
utils:::menuInstallPkgs()
url
url.exists(url="www.google.com")
url.open(url="www.google.com")
url(www.google.com)
url.methof
url.method
library(XML)
library(Rcurl)
RCurl
utils:::menuInstallLocal()
update.packages(ask='graphics',checkBuilt=TRUE)
library
library(rvest)
library(RCurl)
getURL
setRepositories()
chooseCRANmirror()
library(RCurl)
x<-rnorm(100,mean = 5,sd = 0.1)
mean(x)
sd(x)
summary(x)
q()
x <- c(0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.20,0.21,0.23)
y <- c(42.0,43.5,45.0,45.5,45.0,47.5,49,53,50,55,55,60)
plot(y~x)
mod<-lm(y~1 + x)
summary(mod)
A<-matrix(c(1,-1,0
0,1,-1
A<-matrix(c(1,-1,0,
0,1,-1,
1,2,1)
A
A<-matrix(c(1,-1,0,
0,1,-1,
1,2,1)
,3,3)
A
B=(-2,1,5)
B=c(-2,1,5)
B
t(B)
B
B=(c(-2,1,5),3,1)
B<-matrix(c(-2,1,5),3,1)
B
solve(A,B)
solve(B,A)
solve(A,B)
t<- seq(0,2*pi,length = 100)
x<- sin(t)
y<- x*cos(t)
plot(x,y,type = '1')
y<-2*cos(t)
plot(x,y,type='1')
x<-sin(t)   # a=1
y<- 2*cos(t)   # b=2
plot(x,y)
plot(x,y,type = 1)
plot(x,y,type = 'l')
t<- seq(0,2*pi,length = 1000)
plot(x,y,type='l')
q()
help
x<-5
2*x
install.packages("caret")
library(caret)
data()
install.packages("caret")
library(caret)
libratr("caret")
library("caret")
caret
?lm
install.packages("caret")
library(caret)
librart
library(math)
library(caret)
install.packages(gtable)
"gtable"
install.packages("gtable")
library("caret")
install.packages("ggplot2")
library("caret")
library("ggplot2")
install.packages("Rcpp")
library("ggplot2")
library("caret")
install.packages("colorspace")
library("caret")
install.packages("colorspace")
install.packages("colorspace")
library("caret")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("caret")
install.packages("caret")
library("caret")
install.packages("magrittr")
library("caret")
library("magrittr")
install.packages("magrittr")
library("magrittr")
install.packages("magrittr")
library("magrittr")
library(caret)
install.packages("caret")
library(caret)
install.packages(lme4)
install.packages("lme4")
library("lme4")
install.packages("lme4")
library("lme4")
install.packages("lme4")
library("lme4")
install.packages("Matrix")
library("caret")
install.packages("SparseM")
library("SparseM")
library("ggplot2")
library("caret")
x <- -1
x
class(x)
x <- 3.14
x <- 2l
x <- 2L
class(x)
x = 5
str <- "hello world"
str
class(str)
t <- TRUE
T
t
A
R
a
class(t)
class(A)
x <- 1+2i
class(s)
class(x)
print x1
View(B)
x1 <- 1:4
x2 <- c(1,2,3,4)
x3 <- c(TRUE,10,"A")
as.numeric(x4)
x4 <- c("a","b","c")
as.numeric(x4)
class(x4)
x1
x
x <- matrix(1:6,nrow = 3,ncol = 2)
x
dim(X)
dim(x)
attribute(x)
attributes(x)
dim(y) <- c(2,3)
y
y
dim(y) <- c(2,3)
# Matrix & Array & Vector
dim(x)
attributes(x)
y <- 1:6
dim(y) <- c(2,3)
y
x <- array(1:24, dim = c(4,6))
x
x1
x1 <- array(1:24, dim = c(2,3,4))
x1
l <- list("a",2,10L,3+4i,TRUE)
l
l2 <- list(a=1,b=2,c=3)
l2
l3 <- list(c(1,2,3),c(4,5,6,7))
l3
x <- matrix(1:6,nrow = 2,ncol = 3)
x
dimnames(x) <- list(c("a","b"),c("d","e","f"))
x
#list
x <- factor(c("f","f","m","m","f"))
x
table(x)
unclass(x)
x <- c(1,NA,2,NA,3)
X
is.na(x)
is.nan(x)
df <- data.frame(id = c(1,2,3,4) , name - c("a","b","c","d"),gender = c(TRUE,TRUE))
df <- data.frame(id = c(1,2,3,4) , name = c("a","b","c","d"),gender = c(TRUE,TRUE))
df
nrow(df)
ncol(df)
data.matrix(df)
df
x1=c(103,101,98,110,105,100,106)
x2=c(113,107,108,116,114,110,115)
x3=c(82,92,84,86,84,90,88)
shapiro.test(x1)
shapiro.test(x2)
shapiro.test(x3)
x = seq(-10,10,length.out = 50)
y=x
rotsinc=function(x,y)
rotsinc=function(x,y)
{
sinc=function(x){y=sin(x)/x; y[is.na(y)]=1; y}
10*sinc(sqrt(x^2+y^2))
}
sinc.exp-expression(z==Sinc(sqrt(x^2+y^1)))
z=outer(x,y,rotsinc)
sinc.exp=expression(z==Sinc(sqrt(x^2+y^1)))
z=outer(x,y,rotsinc)
x
oldpar=par(bg="write")
oldpar=par(bg="white")
persp(x,y,z,theta=30,phi=30,expand=0.5,col="lightblue")
z=outer(x,y,rotsinc)
左，
data.excel = read.delim("clipboard")
View(data.excel)
mode(data.excel);
dim(data.excel)
data
plot(data)
M = read.table("C:\Users\Pengbing\Desktop\My Documents\HDU\课程\数学建模\2017数学建模作业\数学建模第三次作业\图表\data1.txt",header = T)
M = read.table("D:\Data.txt",header = T)
M = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
M = ts(data$test1,frequency = 1,start = c(2016,1))
N = ts(data$test1,frequency = 1,start = c(2016,1))
N = ts(data$test1,frequency = 12,start = c(2016,1))
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
M = ts(data$test1,frequncy = 12, start = c(2016,1))
M = ts(data$test1,frequency = 12, start = c(2016,1))
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
M = ts(data$M1, frequency = 12, start = c(2016,1))
M = ts(data$M1, frequency = 2, start = c(2016,1))
M = ts(data$M1, frequency = 2, start = c(2016,1))
attach(data)
plot(period,price)
plot()
data
ggplot(data,aes(x = Time, y = demand)) +
geom_line()
library(ggplot)
library(ggplot2)
ggplot(data,aes(x = Time, y = demand)) + geom_line()
ggplot(data,aes(x = Time, y = Price)) + geom_line()
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
ggplot(data,aes(x = Time, y = Price)) + geom_line()
library(gcookbook)
ggplot(data,aes(x = Time, y = Price))
attach(data)
plot(Time,Price)
libary(RODBC)
library(RODBC)
install.packages("RODBC")
library(RODBC)
library(RODBC)
library(xlsx)
install.packages("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
ggplot(BOD,aes(x=Time,y=Price))+geom_line()
channel <- odbcConnectExcel(“data1.xlsx”)
channel <- odbcConnectExcel("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.xls")
odbcClose(channel = )
odbcClose(channel)
mydata <- read.table("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.csv", header = TRUE, sep=",", row.names = "AU")
mydata <- read.table("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.csv", header = TRUE, sep=",", row.names = "AU")
mydata <- read.csv(C:\Users\Pengbing\Desktop\My Documents\HDU\课程\数学建模\2017数学建模作业\数学建模第三次作业\图表)
mydata <- read.csv("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作业\\图表\\data1.csv")
mysata
mydata
skirts <- scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat",skip=5)
skirts
skirtsts <- ts(skirts,start = c(1866))
skirtsts
plot.ts(skirtsts)
skirttsdiff <- diff(skirtsts,difference = 1)
plot.ts(skirttsdiff)
skirtstsdiff2 <- diff(skirts,difference = 2)
plot.ts(skirtstsdiff2)
skirtstsdiff
skirtstsdiff2
acf(skirtstsdiff2, lag.max=20)
acf(skirtstsdiff2, lag.max=20, plot=FALSE)
acf(skirtstsdiff, lag.max=20, plot=FALSE)
acf(skirttsdiff, lag.max=20, plot=FALSE)
acf(skirttsdiff, lag.max=20, plot=TRUE)
acf(skirttsdiff, lag.max=40, plot=TRUE)
acf(skirttsdiff, lag.max=60, plot=TRUE)
acf(skirtstsdiff2, lag.max=60, plot=TRUE)
skirts_ARIMA <- arima(1,2,5)
skirts_ARIMA <- arima(skirts,order(1,2,5))
skirts_ARIMA <- arima(skirts,order = c(1,2,5))
skirts_ARIMA
skirts_ARIMA_forecast <- forecast.arima(skirts_ARIMA, h=5, level = c(99.5))
skirts_ARIMA_forecast <- forecast.arima(skirts_ARIMA, h=5, level = c(99.5))
skirts_ARIMA_forecast <- forecast.Arima(skirts_ARIMA, h=5, level = c(99.5))
library(forecast)
install.packages(forecase)
install.packages(forecast)
skirts
auto.arima(skirts)
library(auto)
library(forecast)
install.packages(auto)
install.packages("forecast")
library(forecast)
library(auto)
install.packages
install.packages("auto")
install.packages("auto")
install.packages("installr")
library(installr)
updateR()
library(auto)
install.packages("auto")
library(forecast)
install.packages("forecast")
install.packages("auto")
library(auto)
install.packages("auto")
skirtstsdiff
skirtstsdiff2
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kings
kings_timeseries <- ts(kings)
kings_timeseries
plot.ts(kings_timeseries)
skirts <- scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat",skip=5)
skirts
skirts_series <- ts(skirts,start=c(1866))
skirts_series
plot.ts(skirts_series)
skirts_series_forecast <- HoltWinters(skirts_series,gamma=FALSE)
skirts_series_forecast
plot(skirts_series_forecast)
HoltWinters(skirts_series,gamma = FALSE,l.start = 608,b.start = 9)
skirts_series_forecast2 <- forecast.HoltWintes(skirts_series,h = 19)
library(forecast)
skirts_series_forecast2 <- forecast.HoltWintes(skirts_series,h = 19)
skirts_series_forecast2 <- forecast.HoltWinters(skirts_series,h = 19)
skirts_series_forecast2 <- forecast.HoltWinters(skirts_series_forecast,h = 19)
plot()
plot.Arima(skirts)
plot.Arima(skirts_series)
plot.forecast(skirts_series_forecast2)
acf(skirts_series_forecast2$residuals,lag.max = 2-)
acf(skirts_series_forecast2$residuals,lag.max = 20)
skirts_series_diff1 <- diff(skirts_series,differences = 1)
plot.ts(skirts_series)
plot.ts(skirts_series_diff1)
skirts_series_diff2 <- diff(skirts_series, differences = 2)
skirts_series_diff2
diff(skirts_series_diff1, differences = 1)
plot.ts(skirts_series_diff2)
acf(skirts_series_diff1, lag.max = 20)
acf(skirts_series_diff21, lag.max = 20)
acf(skirts_series_diff2, lag.max = 20)
pacf(skirts_series, lag.max = 20)
pacf(skirts_series_diff1, lag.max = 20)
pacf(skirts_series_diff2, lag.max = 20)
library(auto.arima)
install.packages("auto")
install.packages("plyr")
library(plyr)
library(ggplot2)
library(reshape2)
installed.packages(plyr)
install.packages("plyr")
install.packages("plyr")
sessionInfo
sessionInfo()
library(plyr)
installr
library(installr)
install.packages(installr)
updateR()
update()
install.packages("installr")
library(installr)
require(installr)
updateR()
updateR()
updateR()
sessionInfo
sessionInfo()
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
library(rattle)
rattle()
rattleInfo()
setwd("D:\\Project\\R")
setwd("D:\\Project\\R")
coms <- read.csv("comsume.csv", header=T, sep=',')
setwd("D:\\Project\\R\\Clustering")
coms <- read.csv("comsume.csv", header=T, sep=',')
coms <- as.data.frame(coms[-1], row.names=c("北京市","天津市","河北省","山西省","内蒙古自治区","辽宁省","吉林省","黑龙江省","上海市","江苏省","浙江省","安徽省","福建省","江西省","山东省","河南省","湖北省","湖南省","广东省","广西壮族自治区","海南省","重庆市","四川省","贵州省","云南省","西藏自治区","陕西省","甘肃省","青海省","宁夏回族自治区","新疆维吾尔自治区"))
coms
coms.scale <- scale(coms)
cmos.scale
coms.scale <- scale(coms)
cmos.scale
cmos
d <- dist(coms.scale, method="euclidean")
d
data.single <- hclust(d, method="single")
plot(data.single, hang=-1, cex=.8, main="Single Linkage Clustering")
data.complete <- hclust(d, method="complete")
plot(data.complete, hang=-1, cex=.8, main="Complete Linkage Clustering")
data.average <- hclust(d, method="average")
plot(data.average, hang=-1, cex=.8, main="Average Linkage Clustering")
data.centroid <- hclust(d, method="centroid")
plot(data.centroid, hang=-1, cex=.8, main="Centroid Linkage Clustering")
data.ward <- hclust(d, method="ward")
plot(data.ward, hang=-1, cex=.8, main="Ward Linkage Clustering")
library(NbClust)
install.packages("NbClust")
library(NbClust)
nc <- NbClust(coms.scale, distance="euclidean", min.nc=2, max.nc=5, method="average")
devAskNewPage(ask=TRUE)
nc <- NbClust(coms.scale, distance="euclidean", min.nc=2, max.nc=5, method="average")
devAskNewPage(ask=TRUE)
nc <- NbClust(coms.scale, distance="euclidean", min.nc=2, max.nc=15, method="average")
table(nc$Best.n[1,])
barplot(table(nc$Best.n[1,]), xlab="Number of Clustering", ylab="Number of Criteria", main="Number of Clusters Chosen by 26 Criteria")
clusters <- cutree(data.average, k=2)
table(clusters)
aggregate(as.data.frame(coms.scale), by=list(cluster=clusters), metian)
aggregate(as.data.frame(coms.scale), by=list(cluster=clusters), median)
plot(data.average, hang=-1, cex=.8, main="Average Linkage Clustering\n Cluster Solution")
rect.hclust(data.average, k=2)
rect.hclust(data.average, k=3)
rect.hclust(data.average, k=2)
km <- kmeans(coms.scale, 5, nstart=20)
km
km
sort(km$cluster)
plot(coms.scale, col=km$cluster)
points(km$centersm col=1:5, pch=8, cex=2)
points(km$centers, col=1:5, pch=8, cex=2)
coms.result <- pam(coms, 5, stant=TRUE)
library(cluster)
coms.result <- pam(coms, 5, stant=TRUE)
summary(coms.result)
library(cluster)
coms.result <- pam(coms, 5, stant=TRUE)
coms.result <- pam(coms, 5, stand=TRUE)
coms.result
summary(coms.result)
plot(coms.result$data, col=coms.result$clustering)
