library("ggplot2")
install.packages("Rcpp")
library("ggplot2")
library("caret")
install.packages("colorspace")
library("caret")
install.packages("colorspace")
install.packages("colorspace")
library("caret")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("caret")
install.packages("caret")
library("caret")
install.packages("magrittr")
library("caret")
library("magrittr")
install.packages("magrittr")
library("magrittr")
install.packages("magrittr")
library("magrittr")
library(caret)
install.packages("caret")
library(caret)
install.packages(lme4)
install.packages("lme4")
library("lme4")
install.packages("lme4")
library("lme4")
install.packages("lme4")
library("lme4")
install.packages("Matrix")
library("caret")
install.packages("SparseM")
library("SparseM")
library("ggplot2")
library("caret")
x <- -1
x
class(x)
x <- 3.14
x <- 2l
x <- 2L
class(x)
x = 5
str <- "hello world"
str
class(str)
t <- TRUE
T
t
A
R
a
class(t)
class(A)
x <- 1+2i
class(s)
class(x)
print x1
View(B)
x1 <- 1:4
x2 <- c(1,2,3,4)
x3 <- c(TRUE,10,"A")
as.numeric(x4)
x4 <- c("a","b","c")
as.numeric(x4)
class(x4)
x1
x
x <- matrix(1:6,nrow = 3,ncol = 2)
x
dim(X)
dim(x)
attribute(x)
attributes(x)
dim(y) <- c(2,3)
y
y
dim(y) <- c(2,3)
# Matrix & Array & Vector
dim(x)
attributes(x)
y <- 1:6
dim(y) <- c(2,3)
y
x <- array(1:24, dim = c(4,6))
x
x1
x1 <- array(1:24, dim = c(2,3,4))
x1
l <- list("a",2,10L,3+4i,TRUE)
l
l2 <- list(a=1,b=2,c=3)
l2
l3 <- list(c(1,2,3),c(4,5,6,7))
l3
x <- matrix(1:6,nrow = 2,ncol = 3)
x
dimnames(x) <- list(c("a","b"),c("d","e","f"))
x
#list
x <- factor(c("f","f","m","m","f"))
x
table(x)
unclass(x)
x <- c(1,NA,2,NA,3)
X
is.na(x)
is.nan(x)
df <- data.frame(id = c(1,2,3,4) , name - c("a","b","c","d"),gender = c(TRUE,TRUE))
df <- data.frame(id = c(1,2,3,4) , name = c("a","b","c","d"),gender = c(TRUE,TRUE))
df
nrow(df)
ncol(df)
data.matrix(df)
df
x1=c(103,101,98,110,105,100,106)
x2=c(113,107,108,116,114,110,115)
x3=c(82,92,84,86,84,90,88)
shapiro.test(x1)
shapiro.test(x2)
shapiro.test(x3)
x = seq(-10,10,length.out = 50)
y=x
rotsinc=function(x,y)
rotsinc=function(x,y)
{
sinc=function(x){y=sin(x)/x; y[is.na(y)]=1; y}
10*sinc(sqrt(x^2+y^2))
}
sinc.exp-expression(z==Sinc(sqrt(x^2+y^1)))
z=outer(x,y,rotsinc)
sinc.exp=expression(z==Sinc(sqrt(x^2+y^1)))
z=outer(x,y,rotsinc)
x
oldpar=par(bg="write")
oldpar=par(bg="white")
persp(x,y,z,theta=30,phi=30,expand=0.5,col="lightblue")
z=outer(x,y,rotsinc)
左，
data.excel = read.delim("clipboard")
View(data.excel)
mode(data.excel);
dim(data.excel)
data
plot(data)
M = read.table("C:\Users\Pengbing\Desktop\My Documents\HDU\课程\数学建模\2017数学建模作业\数学建模第三次作业\图表\data1.txt",header = T)
M = read.table("D:\Data.txt",header = T)
M = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
M = ts(data$test1,frequency = 1,start = c(2016,1))
N = ts(data$test1,frequency = 1,start = c(2016,1))
N = ts(data$test1,frequency = 12,start = c(2016,1))
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
M = ts(data$test1,frequncy = 12, start = c(2016,1))
M = ts(data$test1,frequency = 12, start = c(2016,1))
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
data
M = ts(data$M1, frequency = 12, start = c(2016,1))
M = ts(data$M1, frequency = 2, start = c(2016,1))
M = ts(data$M1, frequency = 2, start = c(2016,1))
attach(data)
plot(period,price)
plot()
data
ggplot(data,aes(x = Time, y = demand)) +
geom_line()
library(ggplot)
library(ggplot2)
ggplot(data,aes(x = Time, y = demand)) + geom_line()
ggplot(data,aes(x = Time, y = Price)) + geom_line()
data = read.table("C:/Users/Pengbing/Desktop/My Documents/HDU/课程/数学建模/2017数学建模作业/数学建模第三次作业/图表/data1.txt",header = T)
ggplot(data,aes(x = Time, y = Price)) + geom_line()
library(gcookbook)
ggplot(data,aes(x = Time, y = Price))
attach(data)
plot(Time,Price)
libary(RODBC)
library(RODBC)
install.packages("RODBC")
library(RODBC)
library(RODBC)
library(xlsx)
install.packages("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
ggplot(BOD,aes(x=Time,y=Price))+geom_line()
channel <- odbcConnectExcel(“data1.xlsx”)
channel <- odbcConnectExcel("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.xls")
odbcClose(channel = )
odbcClose(channel)
mydata <- read.table("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.csv", header = TRUE, sep=",", row.names = "AU")
mydata <- read.table("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作\\图表\\data1.csv", header = TRUE, sep=",", row.names = "AU")
mydata <- read.csv(C:\Users\Pengbing\Desktop\My Documents\HDU\课程\数学建模\2017数学建模作业\数学建模第三次作业\图表)
mydata <- read.csv("C:\\Users\\Pengbing\\Desktop\\My Documents\\HDU\\课程\\数学建模\\2017数学建模作业\\数学建模第三次作业\\图表\\data1.csv")
mysata
mydata
skirts <- scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat",skip=5)
skirts
skirtsts <- ts(skirts,start = c(1866))
skirtsts
plot.ts(skirtsts)
skirttsdiff <- diff(skirtsts,difference = 1)
plot.ts(skirttsdiff)
skirtstsdiff2 <- diff(skirts,difference = 2)
plot.ts(skirtstsdiff2)
skirtstsdiff
skirtstsdiff2
acf(skirtstsdiff2, lag.max=20)
acf(skirtstsdiff2, lag.max=20, plot=FALSE)
acf(skirtstsdiff, lag.max=20, plot=FALSE)
acf(skirttsdiff, lag.max=20, plot=FALSE)
acf(skirttsdiff, lag.max=20, plot=TRUE)
acf(skirttsdiff, lag.max=40, plot=TRUE)
acf(skirttsdiff, lag.max=60, plot=TRUE)
acf(skirtstsdiff2, lag.max=60, plot=TRUE)
skirts_ARIMA <- arima(1,2,5)
skirts_ARIMA <- arima(skirts,order(1,2,5))
skirts_ARIMA <- arima(skirts,order = c(1,2,5))
skirts_ARIMA
skirts_ARIMA_forecast <- forecast.arima(skirts_ARIMA, h=5, level = c(99.5))
skirts_ARIMA_forecast <- forecast.arima(skirts_ARIMA, h=5, level = c(99.5))
skirts_ARIMA_forecast <- forecast.Arima(skirts_ARIMA, h=5, level = c(99.5))
library(forecast)
install.packages(forecase)
install.packages(forecast)
skirts
auto.arima(skirts)
library(auto)
library(forecast)
install.packages(auto)
install.packages("forecast")
library(forecast)
library(auto)
install.packages
install.packages("auto")
install.packages("auto")
install.packages("installr")
library(installr)
updateR()
library(auto)
install.packages("auto")
library(forecast)
install.packages("forecast")
install.packages("auto")
library(auto)
install.packages("auto")
skirtstsdiff
skirtstsdiff2
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kings
kings_timeseries <- ts(kings)
kings_timeseries
plot.ts(kings_timeseries)
skirts <- scan("http://robjhyndman.com/tsdldata/roberts/skirts.dat",skip=5)
skirts
skirts_series <- ts(skirts,start=c(1866))
skirts_series
plot.ts(skirts_series)
skirts_series_forecast <- HoltWinters(skirts_series,gamma=FALSE)
skirts_series_forecast
plot(skirts_series_forecast)
HoltWinters(skirts_series,gamma = FALSE,l.start = 608,b.start = 9)
skirts_series_forecast2 <- forecast.HoltWintes(skirts_series,h = 19)
library(forecast)
skirts_series_forecast2 <- forecast.HoltWintes(skirts_series,h = 19)
skirts_series_forecast2 <- forecast.HoltWinters(skirts_series,h = 19)
skirts_series_forecast2 <- forecast.HoltWinters(skirts_series_forecast,h = 19)
plot()
plot.Arima(skirts)
plot.Arima(skirts_series)
plot.forecast(skirts_series_forecast2)
acf(skirts_series_forecast2$residuals,lag.max = 2-)
acf(skirts_series_forecast2$residuals,lag.max = 20)
skirts_series_diff1 <- diff(skirts_series,differences = 1)
plot.ts(skirts_series)
plot.ts(skirts_series_diff1)
skirts_series_diff2 <- diff(skirts_series, differences = 2)
skirts_series_diff2
diff(skirts_series_diff1, differences = 1)
plot.ts(skirts_series_diff2)
acf(skirts_series_diff1, lag.max = 20)
acf(skirts_series_diff21, lag.max = 20)
acf(skirts_series_diff2, lag.max = 20)
pacf(skirts_series, lag.max = 20)
pacf(skirts_series_diff1, lag.max = 20)
pacf(skirts_series_diff2, lag.max = 20)
library(auto.arima)
install.packages("auto")
install.packages("plyr")
library(plyr)
library(ggplot2)
library(reshape2)
installed.packages(plyr)
install.packages("plyr")
install.packages("plyr")
sessionInfo
sessionInfo()
library(plyr)
installr
library(installr)
install.packages(installr)
updateR()
update()
install.packages("installr")
library(installr)
require(installr)
updateR()
updateR()
updateR()
sessionInfo
sessionInfo()
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
library(rattle)
rattle()
rattleInfo()
data<-read.csv("000001.csv")
setwd("D:\\Project\\R\\Stock_GARCH")
data<-read.csv("000001.csv")
length(data)
summary(data)
library(tseries)
library(timeDate)
library(timeSeries)
library(fBasics)
library(fGarch)
library(tseries)
insall.packages("fGarch")
install.packages("fGarch")
library(fGarch)
close <- data[,2]
n <- length(close)
rows(data)
nrow(data)
nrow(data)
ncol(data)
return <- log(close[2:n]) - log(close[1:n-1])   # 上证指数的对数收益率
head(return)    # 查看return的前6行数据
return <- diff(log(close))    # 直接差分求对数收益率
head(return)
Close.ts <- ts(close, start=c(2000), freq=250)
Return.ts <- ts(return, start=c(2000), freq=250)
par(mfrow=c(2,1))    # 建立一个以两行一列排列图形的图形窗口
plot(Close.ts, type="l", main="(a) Daily Closing Price of 000001.SH", xlab="Date", ylab="Price", cex.main=0.95, las=1)
plot(Return.ts, type="l", main="(b) Daily Closing Price of 000001.SH", xlab="Date", ylab="Rate", cex.main=0.95, las=1)
library(tseries)
u <- sum(return)/n
e <- sqrt(sum((return-u)^2)/(n-1))
s <- sum((return-u)^3)/((n-1)*e^3)
k <- sum((return-u)^4)/((n-1)*e^4)
jarque.bera.test(return)
u
e
s
k
jarqueberaTest(return)
acf(return, main='', xlab="Lag (a)", ylab="ACF", las=1)
title(main='(a) the ACF of Return', cex.main=0.95)
acf(return, main='(a) the ACF of Return', xlab="Lag (a)", ylab="ACF", las=1)
pacf(return, main='(b) the PACF of Return', xlab="Lag (b)", ylab="PACF", las=1, cex.main=0.95)
par(mfrow=c(2,1))
acf(return, main='(a) the ACF of Return', xlab="Lag (a)", ylab="ACF", las=1, cex.main=0.95)
pacf(return, main='(b) the PACF of Return', xlab="Lag (b)", ylab="PACF", las=1, cex.main=0.95)
par(mfrow=c(2,1))
return.square <- return^2
acf(return.square, main='(a) the ACF of Return Square', xlab="Lag (c)", ylab="ACF", las=1, cex.main=0.95)
pacf(return.square, main='(b) the PACF of Return Square', xlab="Lag (d)", tlab="PACF", las=1, cex.main=0.95)
acf(return.square, main='(a) the ACF of Return Square', xlab="Lag (c)", ylab="ACF", las=1, cex.main=0.95)
pacf(return.square, main='(b) the PACF of Return Square', xlab="Lag (d)", ylab="PACF", las=1, cex.main=0.95)
library(zoo)
librrary(FinTS)
library(FinTS)
install.packages("FinTS")
library(timeDate)
library(timeSeries)
library(fBasics)
library(fGarch)
m1 <- garchFit(~1+garch(1,1), data=return, trace=F)
summary(m1)
m2 <- garchFit(~1+garch(1,2), data=return, trace=F)
m2.AIC
m2$AIC
m2$moel
m2$model
summary(m2)
m3 <- garchFit(~1+garch(1,3), data=return, trace=F)
summary(m3)
m4 <- garchFit(~1+garch(1,4), data=return, trace=F)
summary(m4)
resi <- residuals(m1, standardize=T)    # 获得标准化残差
plot(res, xlab='Date', ylab='st.resi', type='l')
plot(resi, xlab='Date', ylab='st.resi', type='l')
par(mfcol=c(2,2))
acf(resi, lag=24)
acf(resi^2, lag=24)
pacf(resi, lag=24)
pacf(resi^2, lag=24)
plot(resi, xlab='Date', ylab='st.resi', type='l')
par(mfcol=c(1,1))
plot(resi, xlab='Date', ylab='st.resi', type='l')
par(mfcol=c(2,2))
acf(resi, lag=24)
acf(resi^2, lag=24)
pacf(resi, lag=24)
pacf(resi^2, lag=24)
# 残差平方的滞后10阶自相关检验
Box.test(resi^2, lag=10, type='Lujung')
# 残差平方的滞后10阶自相关检验
Box.test(resi^2, lag=10, type='Ljung')
Box.test(resi^2, lag=15, type='Ljung')
Box.test(resi^2, lag=20, type='Ljung')
setwd = "D:\\Project\\R\\VAR_Model"
data <- read.csv("monthdata.csv")  # 读取数据
CPI <- data[,1]
setwd = "D:\\Project\\R\\VAR_Model"
data <- read.csv("monthdata.csv")  # 读取数据
getwd
getwd()
setwd("D:\\Project\\R\\VAR_Model")
data <- read.csv("monthdata.csv")  # 读取数据
CPI <- data[,1]
NEER <- data[,2]
length(CPI)
length(NEER)
CPI.ts <- ts(CPI, start=c(2005,8), end=c(2016,12), freq=12)
par(mfrow=c(2,1))
plot(CPI.ts, type='l', xlab='Date', ylab='CPI')
plot(NEER.ts, type='l', xlab='Date', ylab='NEER')
NEER.ts <- ts(NEER, start=c(2005,8), end=c(2016,12), freq=12)
par(mfrow=c(2,1))
plot(CPI.ts, type='l', xlab='Date', ylab='CPI')
plot(NEER.ts, type='l', xlab='Date', ylab='NEER')
lncpi <- log(CPI)
logCPI <- log(CPI)
logNEER <- log(NEER)
library(urca)
install.packages("urca")
library(urca)
urt.logCPI <- ur.df(logCPI, type='trend', selectlags='AIC')
urt.logNEER <- ur.df(logNEER, type='trend', selectlags='AIC')
summary(urt.logCPI)
summary(urt.logNEER)
dlogCPI <- diff(logCPI)
dlogNEER <- diff(logNEER)
urt.dlogNEER <- ur.df(dlogNEER, type='trend', selectlags='AIC')
summary(urt.dlogCPI)
dlogCPI <- diff(logCPI)
dlogNEER <- diff(logNEER)
urt.dlogCPI <- ur.df(dlogCPI, type='trend', selectlags='AIC')
urt.dlogNEER <- ur.df(dlogNEER, type='trend', selectlags='AIC')
summary(urt.dlogCPI)
summary(urt.dlogNEER)
plot(dlogNEER, type='l', xlab='Date', ylab='diff.CPI')
par(mfrow=c(2,1))
plot(dlogCPI, type='l', xlab='Date', ylab='diff.CPI')
plot(dlogNEER, type='l', xlab='Date', ylab='diff.CPI')
fit <- lm(logCPI~logNEER)
fit
summary(fit)
library(zoo)
library(lmtest)
dwtest(fit)
error <- residuals(fit)
error <- residuals(fit)    # 提取残差序列
urt.residuals <- ur.diff(error, type='none', selectlags='AIC')
urt.residuals <- ur.df(error, type='none', selectlags='AIC')
summary(urt.residuals)
error.lag <- error[-c(137,138)]
error.lag <- error[-c(137,138)]
ecm.fit <- lm(dlogCPI~error.lag + dlogNEER)    # 拟合误差修正模型
summary(ecm.fit)
dwtest(ecm.fit)
library(MASS)
library(sandwich)
install.packages("sandwich")
library(strucchange)
library(vars)
library(sandwich)
library(strucchange)
library(vars)
install.packages("strucchange")
library(strucchange)
library(vars)
install.packages("vars")
library(vars)
data.new <- data.frame(logCPI,logNEER)   # 合并数据
VARselect(data.new, lag.max=10, type="const")   # 在10以内选择最优滞后阶数
var <- VAR(data.new, lag.max=2, ic="AIC")
summary(var)
coef(var)
plot(var)
plot(acf)
var
plot(var)
var.irf <- irf(var)
plot(var.irf)
var.predict
var.predict <- predict(var, n.ahead=10, ci=0.95)
var.predict
